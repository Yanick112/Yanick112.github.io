---
import { type CollectionEntry, getCollection } from "astro:content";
import Collections from "@layouts/Collections.astro";
import PostDetails from "@layouts/PostDetails.astro";
import slugify from "@utils/slugify";
import getPageNumbers from "@utils/getPageNumbers";

export interface Props {
  collection: CollectionEntry<"blog">;
}

export async function getStaticPaths() {
  const collections = await getCollection(
    "blog",
    ({ data, id }: CollectionEntry<"blog">) =>
      !data.draft && id.startsWith("collection/")
  );
  
  const collectionResult = collections.map((collection: CollectionEntry<"blog">) => ({
    params: { slug: slugify(collection.data) },
    props: { collection },
  }));

  const pagePaths = getPageNumbers(collections.length).map(pageNum => ({
    params: { slug: String(pageNum) },
  }));

  return [...collectionResult, ...pagePaths];
}

const { collection } = Astro.props;

const collectionData = await getCollection(
  "blog",
  (a: CollectionEntry<"blog">) =>
    a.slug.startsWith("collection/") && !a.data.draft
);
---

{
  collection ? (
    <PostDetails post={collection} />
  ) : (
    <Collections collectionData={collectionData} />
  )
} 